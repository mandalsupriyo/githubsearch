{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","context/alert/alertContext.js","components/layout/Alert.js","components/pages/NotFound.js","components/pages/About.js","components/users/UserItem.js","components/layout/Spinner.js","context/github/githubContext.js","components/users/Users.js","components/users/Search.js","components/pages/Home.js","components/repos/RepoItem.js","components/repos/Repos.js","components/users/User.js","context/github/githubReducer.js","context/github/GithubState.js","context/types.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","alertContext","createContext","Alert","context","useContext","alert","type","msg","NotFound","About","UserItem","user","login","avatar_url","html_url","src","alt","style","width","Spinner","spinner","margin","display","githubContext","userStyle","gridTemplateColumns","gridGap","Users","gc","loading","users","map","key","id","Search","useState","text","setText","ac","onSubmit","e","preventDefault","searchUsers","setAlert","name","placeholder","value","onChange","target","length","onClick","userClear","Home","RepoItem","repo","href","Repos","repos","User","match","useEffect","getUser","params","getUserRepos","location","bio","blog","followers","following","public_repos","public_gists","hireable","company","githubClientId","githubClientSecret","state","action","payload","process","GITHUB_CLIENT_ID","GITHUB_CLIENT_SECRET","GithubState","props","useReducer","githubReducer","dispatch","a","setLoading","axios","get","res","data","items","userName","Provider","children","AlertState","cls","alertReducer","showAlert","setTimeout","App","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.469d3a70.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.21cf2782.gif\";","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst Navbar = ({icon, title}) => {\n      return (\n      <nav className=\"navbar bg-primary\">\n        <h2><i className={icon}></i> {title}</h2>\n\n        <ul>\n          <li>\n            <Link to=\"/\">Home</Link>\n          </li>\n          <li>\n            <Link to=\"/about\">About</Link>\n          </li>\n        </ul>\n      </nav>\n    )  \n}\n\nNavbar.defaultProps = {\n  title: 'Github Finder',\n  icon: 'fab fa-github'\n}\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  icon: PropTypes.string.isRequired\n}\n\n\nexport default Navbar\n","import {createContext} from 'react';\n\nconst alertContext = createContext();\n\nexport default alertContext; ","import React, {useContext} from 'react'\nimport alertContext from '../../context/alert/alertContext'\n\nconst Alert = () => {\n  const context = useContext(alertContext) ;\n  return (\n    context.alert !== null && (\n      <div className={`alert alert-${context.alert.type}`}>\n        <i className='fa fa-info-circle'/>  {context.alert.msg}\n      </div>\n    )\n  );\n};\n\nexport default Alert\n","import React, {Fragment} from 'react'\n\nconst NotFound = () => {\n  return (\n    <Fragment>\n      <h1>404 Not Found</h1>\n      <p className=\"lead\">The page you are looking for doesn't exist...</p>\n    </Fragment>\n  )\n}\n\nexport default NotFound\n","import React, {Fragment} from 'react'\n\nconst About = () => {\n  return (\n    <Fragment>\n      <h1>About This App</h1>\n      <p>App to Search Github USers</p>\n      <p>Version: 1.0.0</p>\n    </Fragment>\n  )\n}\n\nexport default About\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {Link} from 'react-router-dom'\n\nconst UserItem = ({user: {login, avatar_url, html_url}}) => {\n\n    return (\n      <div className=\"card text-center\">\n        <img \n          src={avatar_url} \n          alt=\"User Avater\"\n          className=\"round-img\"\n          style={{ width:'60px' }}\n        />\n        <h3>{login}</h3>\n        <div>\n          <Link to={`user/${login}`} className=\"btn btn-dark btn-sm my-1\">More</Link>\n        </div>\n      </div>\n    )\n}\n\nUserItem.propTypes = {\n  user: PropTypes.object.isRequired,\n}\nexport default UserItem\n","import React, {Fragment} from 'react'\nimport spinner from './spinner.gif'\nconst Spinner = () => <Fragment><img src={spinner} alt=\"Loading...\" style={{ width: '200px', margin: 'auto', display: 'block' }}/></Fragment>\n\nexport default Spinner\n","import {createContext} from 'react';\n\nconst githubContext = createContext();\n\nexport default githubContext; ","import React , {useContext} from 'react'\nimport UserItem from './UserItem'\nimport Spinner from '../layout/Spinner'\nimport githubContext from '../../context/github/githubContext'\n\nconst Users = () => {\n  \n  const gc = useContext(githubContext);\n\n    const {loading, users} = gc;\n\n    if(loading){\n      return <Spinner />\n    }\n    else {\n    return (\n      <div style={userStyle}>\n        {\n          users.map(user =>(\n            <UserItem key={user.id} user={user}/>\n          ))\n        }\n      </div>\n    )\n}\n}\nconst userStyle = {\n  display: 'grid',\n  gridTemplateColumns: 'repeat(3, 1fr)',\n  gridGap: '1rem'\n\n}\n\nexport default Users\n\n","import React, {useState, useContext} from 'react'\nimport githubContext from '../../context/github/githubContext'\nimport alertContext from '../../context/alert/alertContext'\n\nconst Search = () => {\n\n  const [text, setText] = useState('');\n  \n  const gc = useContext(githubContext);\n  const ac = useContext(alertContext);\n\n  const onChange = e => {\n    setText(e.target.value);\n  }\n  \n  const onSubmit = (e) => {\n    e.preventDefault();\n    if(text === ''){\n      ac.setAlert('Please Enter Something', 'info');\n      return;\n    }\n    gc.searchUsers(text);\n    setText('');\n    \n  }\n    \n    return (\n      <div>\n        <form onSubmit={onSubmit}>\n          <div className=\"form\">\n            <input type=\"text\" name=\"text\" placeholder=\"Search Users...\" value={text} onChange={onChange}/>\n            <input type=\"submit\" value=\"Search\" className=\"btn btn-dark btn-block\"/>\n          </div>\n        </form>\n        {gc.users.length >0 && <button className=\"btn btn-warnning btn-block\" onClick={gc.userClear}>Clear</button>}\n      </div>\n    )\n  \n}\n\n\nexport default Search\n","import React, { Fragment } from 'react';\nimport Users from '../users/Users'\nimport Search from '../users/Search'\nconst Home = () => \n    <Fragment>\n      <Search />\n      <Users />\n    </Fragment>\n\nexport default Home;\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst RepoItem = ({repo}) => {\n  return (\n    <div className=\"card\">\n      <h3><a href={repo.html_url}>{repo.name}</a></h3>\n    </div>\n  )\n}\nRepoItem.propTypes = {\n  repo: PropTypes.object.isRequired,\n}\nexport default RepoItem\n","import React from 'react'\nimport RepoItem from './RepoItem'\nimport PropTypes from 'prop-types'\n\nconst Repos = ({repos}) => {\n  return repos.map(repo=><RepoItem repo={repo} key={repo.id}/>);\n}\n\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired,\n}\nexport default Repos\n","import React, { useEffect, Fragment ,useContext } from 'react'\nimport Spinner from '../layout/Spinner'\nimport {Link} from 'react-router-dom'\nimport Repos from '../repos/Repos'\nimport githubContext from '../../context/github/githubContext'\n\nconst User = ({match}) => {\n  const context = useContext(githubContext) \n  useEffect(() => {\n    context.getUser(match.params.login);\n    context.getUserRepos(match.params.login);\n    // eslint-disable-next-line\n  },[]);\n\n    const {\n      name,\n      avatar_url,\n      location,\n      bio,\n      blog,\n      html_url,\n      followers,\n      following,\n      login,\n      public_repos,\n      public_gists,\n      hireable,\n      company,\n    } = context.user;\n\n\n    if(context.loading) return <Spinner/>;\n    \n    return (\n      <Fragment>\n        <Link to=\"/\" className=\"btn btn-light\">\n          Back To Search\n        </Link>\n        Hireable: {' '} {hireable?(<i className=\"fas fa-check text-success\"></i>):(<i className=\"fas fa-times-circle text-danger\"></i>)}\n        <div className=\"card grid-2\">\n          <div className=\"all-center\">\n            <img src={avatar_url} alt=\"avatar\" className=\"round-img\" style={{ width:'150px' }}/>\n            <h1>{name}</h1>\n            <p>Location: {location}</p>\n          </div>\n          <div>\n            {bio && (\n              <Fragment>\n                <h3>Bio</h3>\n                <p>{bio}</p>\n              </Fragment>\n            )}\n            <a href={html_url} className=\"btn btn-dark my-1\">Visit Github Profile</a>\n            <ul>\n              <li>\n                {login && (\n                  <Fragment>\n                    <strong>Username: </strong> {login}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {company && (\n                  <Fragment>\n                    <strong>Company: </strong> {company}\n                  </Fragment>\n                )}\n              </li>\n              <li>\n                {blog && (\n                  <Fragment>\n                    <strong>Website: </strong> {blog}\n                  </Fragment>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n        <div className=\"card text-center\">\n          <div className=\"badge badge-primary\">Followers: {followers}</div>\n          <div className=\"badge badge-success\">Following: {following}</div>\n          <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\n          <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\n        </div>\n\n        <Repos repos={context.repos}/>\n      </Fragment>\n    )\n}\n\n\nexport default User\n","import { SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_REPOS,GET_USER } from '../types'\n\nexport default (state,action) => {\n  switch (action.type) {\n    case SEARCH_USERS:\n      return {\n        ...state,\n        users: action.payload,\n        loading:false\n      }\n    case SET_LOADING:\n      return {\n        ...state,\n        loading: true,\n      }\n    case CLEAR_USERS:\n      return {\n        ...state,\n        loading: false,\n        users:[]\n      }\n    case GET_USER:\n      return {\n        ...state,\n        user:action.payload,\n        loading: false,\n      }\n    case GET_REPOS:\n      return {\n        ...state,\n        repos:action.payload,\n        loading: false,\n      }\n    default:\n      return state;\n  }\n}","import React, {useReducer} from 'react'\nimport axios from 'axios'\nimport githubContext from './githubContext'\nimport githubReducer from './githubReducer'\nimport { SEARCH_USERS,SET_LOADING,CLEAR_USERS,GET_REPOS,GET_USER } from '../types'\n\nlet githubClientId;\nlet githubClientSecret;\n\nif(process.env.NODE_ENV !== 'production'){\n  githubClientId = process.env.REACT_APP_GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.REACT_APP_GITHUB_CLIENT_SECRET;\n}else {\n  githubClientId = process.env.GITHUB_CLIENT_ID;\n  githubClientSecret = process.env.GITHUB_CLIENT_SECRET;\n}\n\nconst GithubState = props => {\n  const initialState = {\n    users:[],\n    user:{},\n    repos:[],\n    loading:false\n  }\n\n  const [state, dispatch] = useReducer(githubReducer, initialState);\n\n  // Search User\n  const searchUsers = async text => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/search/users?q=${text}&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n\n    dispatch({\n      type: SEARCH_USERS,\n      payload: res.data.items\n    });\n  };\n\n\n  // Get USer\n  const getUser = async userName => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}?client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n    dispatch({type:GET_USER, payload:res.data});\n  };\n\n  // Get Repos\n  const getUserRepos = async userName => {\n    setLoading();\n    const res = await axios.get(\n      `https://api.github.com/users/${userName}/repos?per_page=5&sort=created:asc&client_id=${githubClientId}&client_secret=${githubClientSecret}`\n    );\n\n    dispatch({\n      type:GET_REPOS,\n      payload:res.data,\n    });\n  };\n\n\n  // Clear Users\n  const userClear = () => dispatch({type:CLEAR_USERS});\n\n  // Set Loading\n  const setLoading = () => dispatch({type:SET_LOADING})\n\n  return <githubContext.Provider \n    value={\n      {users: state.users,\n      user: state.user,\n      repos:state.repos,\n      loading: state.loading,\n      searchUsers,\n      userClear,\n      getUser,\n      getUserRepos\n      }\n    }\n  >\n  {props.children}\n  </githubContext.Provider>\n}\n\n\nexport default GithubState;","export const SEARCH_USERS = 'SEARCH_USERS';\nexport const GET_USER = 'GET_USER';\nexport const CLEAR_USERS = 'CLEAR_USERS';\nexport const GET_REPOS = 'GET_REPOS';\nexport const SET_LOADING = 'SET_LOADING';\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT'; ","import { SET_ALERT } from '../types'\n\nexport default (state,action) => {\n  switch (action.type) {\n    case SET_ALERT:\n      return {\n        ...state,\n        alert: action.payload,\n      }\n    default:\n      return state;\n  }\n}","import React, {useReducer} from 'react'\nimport alertContext from './alertContext'\nimport alertReducer from './alertReducer'\n\nimport { SET_ALERT } from '../types'\n\nconst AlertState = props => {\n  const initialState = {\n    alert:null\n  }\n\n  const showAlert = (msg, cls) => {\n    setAlert({msg, cls});\n    setTimeout(() => {setAlert(null)}, 2000);\n  };\n\n  const setAlert = (msg, cls) =>{\n    dispatch({type:SET_ALERT,payload:{msg, cls}});\n  }\n\n\n  const [state, dispatch] = useReducer(alertReducer, initialState);\n \n  return <alertContext.Provider \n    value={\n      {\n        alert:state.alert,\n        showAlert,\n        setAlert\n      }\n    }\n  >\n  {props.children}\n  </alertContext.Provider>\n}\n\nexport default AlertState;","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\n\nimport Navbar from './components/layout/Navbar';\nimport Alert from './components/layout/Alert';\nimport NotFound from './components/pages/NotFound';\nimport About from './components/pages/About';\nimport Home from './components/pages/Home';\nimport User from './components/users/User';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className=\"App\">\n            <Navbar title=\"Github Finder\" icon=\"fab fa-github\" />\n            <div className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/user/:login\" component={User} />\n                <Route exact path=\"/about\" component={About} />\n                <Route path=\"/about\" component={NotFound} />\n                <Route component={NotFound} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}